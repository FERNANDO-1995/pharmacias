import Farmacia.Conexao;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Chivela
 */
public class FrmConsulta extends javax.swing.JFrame {

    /**
     * Creates new form FrmFornecedor
     */
    Conexao conexao = new Conexao();
    String sql, idproduto;
    int comparar = 0;

    public FrmConsulta() {
        initComponents();
        SelecionarP();
        SelecionarS();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbpesquis = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        Datavendas = new javax.swing.JFormattedTextField();
        Datavendas1 = new javax.swing.JFormattedTextField();
        NomedoclienteVend = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbpesquisa = new javax.swing.JTable();
        NomedoclienteVenda = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jInternalFrame2.setBackground(new java.awt.Color(255, 255, 255));
        jInternalFrame2.setVisible(true);

        tbpesquis.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tbpesquis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "NOMECLATURA", "CATEGORIA", "PREÃ‡O", "QUANTIDADE", "TOTAL", "DATA", "FUNCIONARIO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbpesquis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbpesquisMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbpesquis);

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel9.setFont(new java.awt.Font("Trajan Pro", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CONSULTA ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(374, 374, 374)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Trajan Pro", 1, 14)); // NOI18N
        jLabel1.setText("Total:0.0");

        jButton3.setFont(new java.awt.Font("Trajan Pro", 1, 12)); // NOI18N
        jButton3.setText("Imprimir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        try {
            Datavendas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        Datavendas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Datavendas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DatavendasFocusGained(evt);
            }
        });
        Datavendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatavendasActionPerformed(evt);
            }
        });
        Datavendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DatavendasKeyPressed(evt);
            }
        });

        try {
            Datavendas1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        Datavendas1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Datavendas1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Datavendas1FocusGained(evt);
            }
        });
        Datavendas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Datavendas1ActionPerformed(evt);
            }
        });
        Datavendas1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Datavendas1KeyPressed(evt);
            }
        });

        NomedoclienteVend.setFont(new java.awt.Font("Trajan Pro", 0, 12)); // NOI18N
        NomedoclienteVend.setEnabled(false);
        NomedoclienteVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomedoclienteVendActionPerformed(evt);
            }
        });
        NomedoclienteVend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NomedoclienteVendKeyReleased(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Trajan Pro", 1, 12)); // NOI18N
        jButton4.setText("Busca");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Trajan Pro", 1, 12)); // NOI18N
        jLabel2.setText("DE");

        jLabel3.setFont(new java.awt.Font("Trajan Pro", 1, 12)); // NOI18N
        jLabel3.setText("Para");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Datavendas, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Datavendas1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(NomedoclienteVend, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton3))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 12, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Datavendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Datavendas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NomedoclienteVend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("CONSULTA", jInternalFrame2);

        jInternalFrame3.setBackground(new java.awt.Color(255, 255, 255));
        jInternalFrame3.setVisible(true);

        tbpesquisa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbpesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "NOMECLATURA", "QUANTIDADE", "CATEGORIA", "CADUCIDADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbpesquisa);

        NomedoclienteVenda.setFont(new java.awt.Font("Trajan Pro", 1, 14)); // NOI18N
        NomedoclienteVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomedoclienteVendaActionPerformed(evt);
            }
        });
        NomedoclienteVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NomedoclienteVendaKeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Trajan Pro", 1, 14)); // NOI18N
        jButton1.setText("Busca");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Trajan Pro", 1, 14)); // NOI18N
        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 0, 255));

        jLabel10.setFont(new java.awt.Font("Trajan Pro", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("PRODUTO EM STOCK");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(374, 374, 374)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel4.setText("12 PRODUTO ESTÃƒO CADUCADO");
        jLabel4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLabel4FocusGained(evt);
            }
        });
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 910, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NomedoclienteVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(38, 38, 38)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NomedoclienteVenda)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("PRODUTO EM STOCK", jInternalFrame3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NomedoclienteVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomedoclienteVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomedoclienteVendaActionPerformed

    private void NomedoclienteVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NomedoclienteVendaKeyReleased
        //controlar = 0;
        SelecionarP();
    }//GEN-LAST:event_NomedoclienteVendaKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void NomedoclienteVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomedoclienteVendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomedoclienteVendActionPerformed

    private void NomedoclienteVendKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NomedoclienteVendKeyReleased
        
        SelecionarS();
    }//GEN-LAST:event_NomedoclienteVendKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        SelecionarS();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void DatavendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatavendasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DatavendasActionPerformed

    private void DatavendasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DatavendasFocusGained
if ("    /  /  ".equalsIgnoreCase(Datavendas.getText())) {
    Date agora = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyMMdd");
        String recebedata = simpleDateFormat.format(agora);
        Datavendas.setText(recebedata);
        NomedoclienteVend.setEnabled(true);
}
        
    }//GEN-LAST:event_DatavendasFocusGained

    private void DatavendasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatavendasKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DatavendasKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
sql = "SELECT SUM(entradas.stock),"
                + "produto.id,produto.nome,produto.preco,produto.tipo_medicamento,entradas.caducidade FROM entradas  inner join"
                + " produto  on entradas.producto_id = produto.id  && "
                + "produto.nome like '" + NomedoclienteVenda.getText().toUpperCase() + "%' "
                + " GROUP BY produto.id ORDER BY produto.id ASC";        
        
        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            JRResultSetDataSource dataSource = new JRResultSetDataSource(rs);
            JasperPrint jasperPrint = JasperFillManager.fillReport("C:\\FARMACIA\\relatorios\\rep.jasper", new HashMap(),dataSource);
            JasperViewer jv = new JasperViewer(jasperPrint,false);
            jv.setVisible(true);
          

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          
        
         if ("    /  /  ".equalsIgnoreCase(Datavendas.getText())) {
            sql = "SELECT funcionario.nome as nof, "
                + "produto.id,produto.nome as nom,produto.preco,"
                + "produto.tipo_medicamento,saidas.id,saidas.data,saidas.qtdade,saidas.total FROM saidas join"
                + " produto  on saidas.producto_id = produto.id "
                + " join funcionario on funcionario.id=saidas.funcionario_id "
                + " && "
                + " (produto.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%'  "
                + "|| funcionario.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%') GROUP BY saidas.id ORDER BY saidas.id DESC";
            try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            JRResultSetDataSource dataSource = new JRResultSetDataSource(rs);
            JasperPrint jasperPrint = JasperFillManager.fillReport("C:\\FARMACIA\\relatorios\\cc.jasper", new HashMap(),dataSource);
            JasperViewer jv = new JasperViewer(jasperPrint,false);
            jv.setVisible(true);
          

        } catch (Exception e) {
            e.printStackTrace();
        }
        } else {
             
             if (!"    /  /  ".equalsIgnoreCase(Datavendas1.getText())) {
                 sql = "SELECT funcionario.nome as nof, "
                + "produto.id,produto.nome as nom,produto.preco,"
                + "produto.tipo_medicamento,saidas.id,saidas.data,saidas.qtdade,saidas.total FROM saidas join"
                + " produto  on saidas.producto_id = produto.id "
                + " join funcionario on funcionario.id=saidas.funcionario_id "
                + " && (saidas.data >= '" + Datavendas.getText().toUpperCase() + "' && saidas.data <= '" + Datavendas1.getText().toUpperCase() + "') && "
                + " (produto.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%' "
                + "|| funcionario.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%') GROUP BY saidas.id ORDER BY saidas.id DESC";
        
             try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            JRResultSetDataSource dataSource = new JRResultSetDataSource(rs);
            JasperPrint jasperPrint = JasperFillManager.fillReport("C:\\FARMACIA\\relatorios\\cccc.jasper", new HashMap(),dataSource);
            JasperViewer jv = new JasperViewer(jasperPrint,false);
            jv.setVisible(true);
          

        } catch (Exception e) {
            e.printStackTrace();
        }
             } else {
                 
                 sql = "SELECT funcionario.nome as nof, "
                + "produto.id,produto.nome as nom,produto.preco,"
                + "produto.tipo_medicamento,saidas.id,saidas.data,saidas.qtdade,saidas.total FROM saidas join"
                + " produto  on saidas.producto_id = produto.id "
                + " join funcionario on funcionario.id=saidas.funcionario_id "
                + " && saidas.data = '" + Datavendas.getText().toUpperCase() + "' && "
                + " (produto.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%' "
                + "|| funcionario.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%') GROUP BY saidas.id ORDER BY saidas.id DESC";
        
             try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            JRResultSetDataSource dataSource = new JRResultSetDataSource(rs);
            JasperPrint jasperPrint = JasperFillManager.fillReport("C:\\FARMACIA\\relatorios\\ccc.jasper", new HashMap(),dataSource);
            JasperViewer jv = new JasperViewer(jasperPrint,false);
            jv.setVisible(true);
          

        } catch (Exception e) {
            e.printStackTrace();
        }
             }
         }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void Datavendas1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Datavendas1FocusGained
        if ("    /  /  ".equalsIgnoreCase(Datavendas1.getText())) {
    Date agora = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyMMdd");
        String recebedata = simpleDateFormat.format(agora);
        Datavendas1.setText(recebedata);
        //NomedoclienteVend.setEnabled(true);
}
    }//GEN-LAST:event_Datavendas1FocusGained

    private void Datavendas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Datavendas1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Datavendas1ActionPerformed

    private void Datavendas1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Datavendas1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Datavendas1KeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new FrmFarmacia1().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void tbpesquisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbpesquisMouseClicked
         TableModel model = tbpesquis.getModel();
//        idfornecedor = (String) model.getValueAt(tbprodutosvendido.getSelectedRow(), 0);
        String idsaida=(String) model.getValueAt(tbpesquis.getSelectedRow(), 0);
        

        //desablitarcampo();
       // editarfornecedor.setEnabled(true);
        if (evt.getClickCount()==2){
          int confirmar = JOptionPane.showConfirmDialog(null, "DESEJA REMOVER ESTE REGISTO?", "ATENÃ‡ÃƒO", JOptionPane.YES_NO_OPTION);
        if (confirmar == JOptionPane.YES_OPTION) {
            
            apagar(idsaida);
            SelecionarS();
            // SelecionarP();
           
        }
       }
    }//GEN-LAST:event_tbpesquisMouseClicked

    private void jLabel4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLabel4FocusGained

    }//GEN-LAST:event_jLabel4FocusGained

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
Selecaducado();
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField Datavendas;
    private javax.swing.JFormattedTextField Datavendas1;
    private javax.swing.JTextField NomedoclienteVend;
    private javax.swing.JTextField NomedoclienteVenda;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbpesquis;
    private javax.swing.JTable tbpesquisa;
    // End of variables declaration//GEN-END:variables

  private void SelecionarP() {
        sql = "SELECT SUM(entradas.stock),"
                + "produto.id,produto.nome,produto.preco,produto.tipo_medicamento,entradas.caducidade FROM entradas  inner join"
                + " produto  on entradas.producto_id = produto.id  && entradas.stock>-1 && "
                + "produto.nome like '" + NomedoclienteVenda.getText().toUpperCase() + "%' "
                + " GROUP BY produto.id ORDER BY produto.id ASC";
        DefaultTableModel dtm = (DefaultTableModel) tbpesquisa.getModel();
        if (dtm.getRowCount() != 0) {

            ((DefaultTableModel) tbpesquisa.getModel()).setNumRows(0);// serve para formatar a tualiza a tabela e vai repor as linhas que tiver dentro da tabela que esta no java
            tbpesquisa.updateUI();

        }
String caducidade;
int qtdcad=0;
        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                if (1>conexao.diferenciadia(rs.getString(6))) {
                    qtdcad++;
                                   caducidade ="<html>  <p color='red'> "+rs.getString(6)+"</p></html>";
                } else {
                    caducidade=rs.getString(6);
                }
                Object[] recebeDado = {rs.getString(2), rs.getString(3), rs.getString(1), rs.getString(5), caducidade};
                dtm.addRow(recebeDado);
                jLabel4.setText(" QUANTIDADE DE PRODUTO CADUCADO "+qtdcad);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void Selecaducado() {
        Date agora = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyMMdd");
        String recebedata = simpleDateFormat.format(agora);
        sql = "SELECT SUM(entradas.stock),"
                + "produto.id,produto.nome,produto.preco,produto.tipo_medicamento,entradas.caducidade FROM entradas  inner join"
                + " produto  on entradas.producto_id = produto.id  && entradas.stock>-1 && entradas.caducidade  <='"+recebedata+"' && "
                + "produto.nome like '" + NomedoclienteVenda.getText().toUpperCase() + "%' "
                + " GROUP BY produto.id ORDER BY produto.id ASC";
        DefaultTableModel dtm = (DefaultTableModel) tbpesquisa.getModel();
        if (dtm.getRowCount() != 0) {

            ((DefaultTableModel) tbpesquisa.getModel()).setNumRows(0);// serve para formatar a tualiza a tabela e vai repor as linhas que tiver dentro da tabela que esta no java
            tbpesquisa.updateUI();

        }
String caducidade;
        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                if (1>conexao.diferenciadia(rs.getString(6))) {
                                   caducidade ="<html>  <p color='red'> "+rs.getString(6)+"</p></html>";
                } else {
                    caducidade=rs.getString(6);
                }
                Object[] recebeDado = {rs.getString(2), rs.getString(3), rs.getString(1), rs.getString(5), caducidade};
                dtm.addRow(recebeDado);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
     private void SelecionarS() {
         
         if (!"    /  /  ".equalsIgnoreCase(Datavendas.getText())) {
             if (!"    /  /  ".equalsIgnoreCase(Datavendas1.getText())) {
                 sql = "SELECT funcionario.nome, cliente.nome, "
                + "produto.id,produto.nome,produto.preco,produto.tipo_medicamento,saidas.id,saidas.data,saidas.qtdade,saidas.total FROM saidas join"
                + " produto  on saidas.producto_id = produto.id "
                + " join funcionario on funcionario.id=saidas.funcionario_id join "
                + "cliente on cliente.id=saidas.cliente_id && "
                + " (produto.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%' ||  "
                + " funcionario.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%')"
                     + " && (saidas.data >= '" + Datavendas.getText().toUpperCase() + "' && saidas.data <= '" + Datavendas1.getText().toUpperCase() + "')  GROUP BY saidas.id ORDER BY saidas.id DESC";
             } else {
                  sql = "SELECT funcionario.nome, cliente.nome, "
                + "produto.id,produto.nome,produto.preco,produto.tipo_medicamento,saidas.id,saidas.data,saidas.qtdade,saidas.total FROM saidas join"
                + " produto  on saidas.producto_id = produto.id "
                + " join funcionario on funcionario.id=saidas.funcionario_id join "
                + "cliente on cliente.id=saidas.cliente_id && "
                + " (produto.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%'  "
                + "|| funcionario.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%')"
                     + " && saidas.data = '" + Datavendas.getText().toUpperCase() + "'  GROUP BY saidas.id ORDER BY saidas.id DESC";
             }
         } else {
            
             
             sql = "SELECT funcionario.nome, cliente.nome, "
                + "produto.id,produto.nome,produto.preco,produto.tipo_medicamento,saidas.id,saidas.data,saidas.qtdade,saidas.total FROM saidas join"
                + " produto  on saidas.producto_id = produto.id "
                + " join funcionario on funcionario.id=saidas.funcionario_id join "
                + "cliente on cliente.id=saidas.cliente_id && "
                + " (produto.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%' "
                + "|| funcionario.nome like '" + NomedoclienteVend.getText().toUpperCase() + "%') GROUP BY saidas.id ORDER BY saidas.id DESC";
         }
        
        DefaultTableModel dtm = (DefaultTableModel) tbpesquis.getModel();
        if (dtm.getRowCount() != 0) {

            ((DefaultTableModel) tbpesquis.getModel()).setNumRows(0);// serve para formatar a tualiza a tabela e vai repor as linhas que tiver dentro da tabela que esta no java
            tbpesquis.updateUI();

        }
        Double total=0.0;
        int i=1;
        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                Object[] recebeDado = {rs.getString(7),rs.getString(4),  rs.getString(6), rs.getString(5)+" kz", rs.getString(9)
                , rs.getString(10)+" kz", rs.getString(8), rs.getString(1)};
                dtm.addRow(recebeDado);
                total+=rs.getInt(10);
            }
            jLabel1.setText("Total: "+total+"0");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void apagar(String idsaida) {
        sql = "delete from saidas where id='" + idsaida + "'  ";

        try {
            conexao.conectar();
            int a = conexao.cadastrar_dado(sql);
            if (a != 0) {
                JOptionPane.showMessageDialog(null, "registo removido com sucesso");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
}
