import Farmacia.Conexao;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Chivela
 */
public class FrmProduto extends javax.swing.JFrame {

    /**
     * Creates new form FrmFornecedor
     */
    Conexao conexao = new Conexao();
    
    
    String sql, idproduto;
    int comparar = 0;

    public FrmProduto() {
        initComponents();
                SelecionarM();
                categoria();
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nomeproduto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        precoproduto = new javax.swing.JTextField();
        salvarfornecedor = new javax.swing.JButton();
        novofornecedor = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbproduto = new javax.swing.JTable();
        editarfornecedor = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tipoproduto = new javax.swing.JComboBox();
        TXTPESQUISAR = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        nomeproduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomeprodutoKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("NOME");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("PREÇO");

        salvarfornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        salvarfornecedor.setText("SALVA");
        salvarfornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarfornecedorActionPerformed(evt);
            }
        });

        novofornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        novofornecedor.setText("NOVO");
        novofornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novofornecedorActionPerformed(evt);
            }
        });

        tbproduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "NOME", "PREÇO", "DESCRIÇÃO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbproduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbprodutoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbproduto);

        editarfornecedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editarfornecedor.setText("EDITAR");
        editarfornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarfornecedorActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("CATEGORIA MEDICAMENTO");

        tipoproduto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        TXTPESQUISAR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TXTPESQUISARKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(TXTPESQUISAR, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(precoproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tipoproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(novofornecedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(salvarfornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(editarfornecedor)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(precoproduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomeproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tipoproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvarfornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarfornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(novofornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(TXTPESQUISAR, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CADASTRO DOS PRODUTOS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void salvarfornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarfornecedorActionPerformed

        if (comparar == 0) {
            SalvarProduto();

        } else {
            AtualizarProduto();
            comparar = 0;
            salvarfornecedor.setText("SALVAR");
        }
        SelecionarM();
        desablitarcampo();

    }//GEN-LAST:event_salvarfornecedorActionPerformed

    private void novofornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novofornecedorActionPerformed
        LimparCampo();
        comparar = 0;
        salvarfornecedor.setText("SALVAR");
    }//GEN-LAST:event_novofornecedorActionPerformed

    private void tbprodutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbprodutoMouseClicked

        TableModel model = tbproduto.getModel();
        idproduto = (String) model.getValueAt(tbproduto.getSelectedRow(), 0);
        nomeproduto.setText((String) model.getValueAt(tbproduto.getSelectedRow(), 1));
        precoproduto.setText((String) model.getValueAt(tbproduto.getSelectedRow(), 2));
        tipoproduto.setSelectedItem((String) model.getValueAt(tbproduto.getSelectedRow(), 3));

        desablitarcampo();
        editarfornecedor.setEnabled(true);


    }//GEN-LAST:event_tbprodutoMouseClicked

    private void editarfornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarfornecedorActionPerformed
        salvarfornecedor.setEnabled(true);
        salvarfornecedor.setText("ATUALIZAR");
        comparar = 1;
        nomeproduto.setEnabled(true);
        precoproduto.setEnabled(true);
        tipoproduto.setEnabled(true);

    }//GEN-LAST:event_editarfornecedorActionPerformed

    private void nomeprodutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeprodutoKeyReleased
        SelecionarMe();
    }//GEN-LAST:event_nomeprodutoKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new FrmFarmacia1().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void TXTPESQUISARKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPESQUISARKeyReleased
        // TODO add your handling code here:
        SelecionarM();
    }//GEN-LAST:event_TXTPESQUISARKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TXTPESQUISAR;
    private javax.swing.JButton editarfornecedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nomeproduto;
    private javax.swing.JButton novofornecedor;
    private javax.swing.JTextField precoproduto;
    private javax.swing.JButton salvarfornecedor;
    private javax.swing.JTable tbproduto;
    private javax.swing.JComboBox tipoproduto;
    // End of variables declaration//GEN-END:variables

    private void SalvarProduto() {
        sql = "insert into produto values(null,'" + nomeproduto.getText().toUpperCase() + "', "
                + "'" + precoproduto.getText().toUpperCase() + "',"
                + " '" + tipoproduto.getSelectedItem() + "')";

        try {
            conexao.conectar();
            int a = conexao.cadastrar_dado(sql);
            if (a != 0) {
                JOptionPane.showMessageDialog(null, "REGISTO CADASTRADO COM SUCESSO");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void AtualizarProduto() {

        sql = "update produto set nome = '" + nomeproduto.getText().toUpperCase() + "', preco ='" + precoproduto.getText().toUpperCase() + "',"
                + " tipo_medicamento = '" + tipoproduto.getSelectedItem() + "'  where id = '" + idproduto + "'";

        try {
            conexao.conectar();
            int verificar = conexao.cadastrar_dado(sql);
            if (verificar != 0) {
                JOptionPane.showMessageDialog(null, "REGISTO ATUALIZADO COM SUCESSO");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void LimparCampo() {

        nomeproduto.setEnabled(true);
        precoproduto.setEnabled(true);
        tipoproduto.setEnabled(true);
        salvarfornecedor.setEnabled(true);
        novofornecedor.setEnabled(!true);
        editarfornecedor.setEnabled(!true);

        nomeproduto.setText("");
        precoproduto.setText("");
        tipoproduto.setSelectedIndex(0);

    }

    private void desablitarcampo() {
        nomeproduto.setEnabled(false);
        precoproduto.setEnabled(false);
        tipoproduto.setEnabled(false);
        salvarfornecedor.setEnabled(false);
        editarfornecedor.setEnabled(false);
        novofornecedor.setEnabled(true);

    }

    private void SelecionarM() {
        sql = "select * from produto where nome like '" + TXTPESQUISAR.getText().toUpperCase() + "%' ORDER BY id desc";
        DefaultTableModel dtm = (DefaultTableModel) tbproduto.getModel();
        if (dtm.getRowCount() != 0) {

            ((DefaultTableModel) tbproduto.getModel()).setNumRows(0);// serve para formatar a tualiza a tabela e vai repor as linhas que tiver dentro da tabela que esta no java
            tbproduto.updateUI();

        }

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                Object[] recebeDado = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)};
                dtm.addRow(recebeDado);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void SelecionarMe() {
        sql = "select * from produto where nome like '" + nomeproduto.getText().toUpperCase() + "%' ORDER BY id desc";
        DefaultTableModel dtm = (DefaultTableModel) tbproduto.getModel();
        if (dtm.getRowCount() != 0) {

            ((DefaultTableModel) tbproduto.getModel()).setNumRows(0);// serve para formatar a tualiza a tabela e vai repor as linhas que tiver dentro da tabela que esta no java
            tbproduto.updateUI();

        }

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                Object[] recebeDado = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)};
                dtm.addRow(recebeDado);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    
    private void categoria() {
        
        sql = "select * from categoria ORDER BY nome asc";
        

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                tipoproduto.addItem(rs.getString(2));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
