import Farmacia.Conexao;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Chivela
 */
public class FrmItenVendaAdm extends javax.swing.JFrame {

    /**
     * Creates new form FrmFornecedor
     */
    Conexao conexao = new Conexao();
    FrmFarmacia1 farmacia = new FrmFarmacia1();
    String sql, idcliente = "1", idproduto, qtdporVenda, idvenda, qtd;
    int comparar = 0, controlar = 1, idmovimento;
    double totalcompra = 0, troco = 0;
    String id = conexao.Read();
    String nomefunc = conexao.ReadNome();

    public FrmItenVendaAdm() {
        initComponents();
        SelecionarMovimento();
        
        buscardata();
        
        jLabel12.setText(nomefunc);
        if ("FUNCIONARIO".equalsIgnoreCase(conexao.ReadCargo())) {
                jButton1.setVisible(false);
            }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        listar = new javax.swing.JList();
        ProdutoVenda = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        ValorporVenda = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        QuantidadeVenda = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Datavendas = new javax.swing.JFormattedTextField();
        MULTIPICACAO = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ValorPago = new javax.swing.JTextField();
        trocos = new javax.swing.JLabel();
        ValorTotalVenda = new javax.swing.JLabel();
        finalizarcompra = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbprodutosvendido = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        item = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Tabela de Pesquisa");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        listar.setBackground(new java.awt.Color(240, 240, 240));
        listar.setOpaque(false);
        listar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listarMouseClicked(evt);
            }
        });

        ProdutoVenda.setToolTipText("Busca");
        ProdutoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ProdutoVendaFocusLost(evt);
            }
        });
        ProdutoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ProdutoVendaKeyReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setText("Pesquisar");

        ValorporVenda.setEditable(false);
        ValorporVenda.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Pre√ßo");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Quantidade");

        QuantidadeVenda.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        QuantidadeVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                QuantidadeVendaKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Data");

        try {
            Datavendas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        Datavendas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Datavendas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DatavendasFocusGained(evt);
            }
        });
        Datavendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatavendasActionPerformed(evt);
            }
        });
        Datavendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DatavendasKeyPressed(evt);
            }
        });

        MULTIPICACAO.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        MULTIPICACAO.setText("Total");

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icons8_Plus_30px.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(listar, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(Datavendas, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MULTIPICACAO, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(ValorporVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuantidadeVenda))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ValorporVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuantidadeVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(MULTIPICACAO))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Datavendas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(299, 299, 299))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(listar, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 255));
        jButton4.setText("FECHO DO DIA");
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Valor Total");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Valor Pago");

        ValorPago.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ValorPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ValorPagoKeyReleased(evt);
            }
        });

        trocos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        trocos.setText("Troco 0.00");

        ValorTotalVenda.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ValorTotalVenda.setText("0.00");

        finalizarcompra.setBackground(new java.awt.Color(110, 89, 222));
        finalizarcompra.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        finalizarcompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icons8_Save_30px.png"))); // NOI18N
        finalizarcompra.setToolTipText("Finalizar Venda");
        finalizarcompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarcompraActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Devolu√ß√£o");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(ValorTotalVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trocos, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ValorPago, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(finalizarcompra, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(ValorTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ValorPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(trocos, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(finalizarcompra, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(72, 72, 72))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tbprodutosvendido.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        tbprodutosvendido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Descri√ß√£o", "Quantidade", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbprodutosvendido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbprodutosvendidoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbprodutosvendido);

        jButton2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icons8_Delete_30px.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel3.setText("Registos facturados");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        jLabel12.setBackground(new java.awt.Color(54, 33, 89));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("DESCONHECIDO");

        jLabel14.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Atendimento Diario");

        jLabel9.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("0.00");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jSeparator2.setBackground(new java.awt.Color(204, 204, 204));

        jPanel8.setBackground(new java.awt.Color(110, 89, 222));

        item.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        item.setForeground(new java.awt.Color(255, 255, 255));
        item.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        item.setText("SISTEMA DE VENDA");
        item.setToolTipText("");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(item, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icons8_Delete_30px_3.png"))); // NOI18N
        jButton6.setToolTipText("SAIR");
        jButton6.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 7, 7));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(54, 33, 89));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(47, 47, 47))
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 252, Short.MAX_VALUE)))
                        .addContainerGap())))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 990, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new FrmFarmacia1().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        
            if ("GERENTE".equalsIgnoreCase(conexao.ReadCargo())) {
                new FrmFarmacia1().setVisible(true);
                this.dispose();
            } else {
                new LOGAR1().setVisible(true);
                this.dispose();
            }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //atualizarapagar(idvenda);
        SelecionarParaVenda();
        atualizarapagar(idvenda, qtd);
        SelecionarParaVenda();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbprodutosvendidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbprodutosvendidoMouseClicked

        TableModel model = tbprodutosvendido.getModel();
        //        idfornecedor = (String) model.getValueAt(tbprodutosvendido.getSelectedRow(), 0);
        idvenda = (String) model.getValueAt(tbprodutosvendido.getSelectedRow(), 0);
        String pro = (String) model.getValueAt(tbprodutosvendido.getSelectedRow(), 1);
        qtd = (String) model.getValueAt(tbprodutosvendido.getSelectedRow(), 2);
        // moradafornecedor.setText((String) model.getValueAt(tbfornecedor.getSelectedRow(), 3));

        //desablitarcampo();
        // editarfornecedor.setEnabled(true);

    }//GEN-LAST:event_tbprodutosvendidoMouseClicked

    private void ValorPagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValorPagoKeyReleased
        double valorpago, total;
        total = Double.parseDouble(ValorTotalVenda.getText().toString());
        valorpago = Double.parseDouble(ValorPago.getText().toString());
        troco = valorpago - total;
        if (troco < 0) {
            //JOptionPane.showMessageDialog(null, "O VALOR PAGO √â MELHOR QUE O TOTAL DA VENDA");
            trocos.setText("Troco 0.00");
        } else {
            trocos.setText("Troco " + troco + "0");
        }
    }//GEN-LAST:event_ValorPagoKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        sql = "SELECT cliente.nome as clnome, "
        + "produto.nome as nom,produto.preco,"
        + "produto.tipo_medicamento,saidas.qtdade,saidas.total,saidas.data,funcionario.nome as fnome FROM saidas join"
        + " produto  on saidas.producto_id = produto.id  && saidas.data='" + data() + "' && saidas.funcionario_id='" + id + "' "
        + "join cliente on cliente.id=saidas.cliente_id join funcionario on funcionario.id='" + id + "' "
        + " ORDER BY saidas.id DESC";

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
            ResultSet rs = ps.executeQuery()) {
            JRResultSetDataSource dataSource = new JRResultSetDataSource(rs);
            JasperPrint jasperPrint = JasperFillManager.fillReport("C:\\FARMACIA\\relatorios\\diariav.jasper", new HashMap(), dataSource);
            JasperViewer jv = new JasperViewer(jasperPrint, false);
            jv.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int confirmar = JOptionPane.showConfirmDialog(null, "DESEJA FAZER DEVOLU√á√ÉO DE ALGUM PRODUTO?", "ATEN√á√ÉO", JOptionPane.YES_NO_OPTION);
        if (confirmar == JOptionPane.YES_OPTION) {
            new Devolucao().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (!"".equalsIgnoreCase(ProdutoVenda.getText()) && !"".equalsIgnoreCase(QuantidadeVenda.getText())) {

            addsaida();
            AtualizareNTRADA();
            SelecionarParaVenda();
            ProdutoVenda.setText("");
            ValorporVenda.setText("");
            QuantidadeVenda.setText("");

            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void DatavendasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatavendasKeyPressed

    }//GEN-LAST:event_DatavendasKeyPressed

    private void DatavendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatavendasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DatavendasActionPerformed

    private void DatavendasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DatavendasFocusGained

        buscardata();
    }//GEN-LAST:event_DatavendasFocusGained

    private void QuantidadeVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_QuantidadeVendaKeyReleased
        Double preco = Double.parseDouble(ValorporVenda.getText().toString());
        Double qtd = Double.parseDouble(QuantidadeVenda.getText().toString());
        Double qtdporVend = Double.parseDouble(qtdporVenda.toString());
        if (qtdporVend >= qtd) {
            MULTIPICACAO.setText("Total: " + (preco * qtd) + "0");

        } else {

            JOptionPane.showMessageDialog(null, "A QUANTIDADE EM STOCK √â DE "+qtdporVend+" ENT√ÉO ESTE PEDIDO N√ÉO PODE SER PROCESSADO");
        }

    }//GEN-LAST:event_QuantidadeVendaKeyReleased

    private void ProdutoVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProdutoVendaKeyReleased
        controlar = 1;
        if (!ProdutoVenda.getText().isEmpty()) {
            SelecionarP();
        } else {
            DefaultListModel dlm = new DefaultListModel();
            dlm.clear();

            listar.setModel(dlm);
        }
    }//GEN-LAST:event_ProdutoVendaKeyReleased

    private void ProdutoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ProdutoVendaFocusLost

    }//GEN-LAST:event_ProdutoVendaFocusLost

    private void listarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarMouseClicked
        StringBuilder receber = new StringBuilder();
        receber.append(listar.getSelectedValue());
        int a = receber.indexOf("_") + 1;
        int recebe = receber.indexOf("^");

        adcionarcomp(receber.substring(a, recebe));
        DefaultListModel dlm = new DefaultListModel();
        dlm.clear();
        listar.setModel(dlm);
    }//GEN-LAST:event_listarMouseClicked

    private void finalizarcompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarcompraActionPerformed
        if (troco < 0 || "".equalsIgnoreCase(ValorPago.getText())) {
            JOptionPane.showMessageDialog(null, "O VALOR PAGO √â MENOR QUE O TOTAL DA VENDA");

        } else {
            sql = "update saidas set troco = '"+troco+"',valorpago ='"+ValorPago.getText()+"' where idmovimento = '" + idmovimento + "' && saidas.data='" + data() + "'";

            try {
                conexao.conectar();
                conexao.cadastrar_dado(sql);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

            int confirmar = JOptionPane.showConfirmDialog(null, "DESEJA REALMENTE FINALIZAR A COMPRA?", "ATENCAO", JOptionPane.YES_NO_OPTION);
            if (confirmar == JOptionPane.YES_OPTION) {
                trocos.setText("Troco 0.00 ");
                troco = 0.00;
                ValorPago.setText("");
                sql = "SELECT saidas.idmovimento as cc,SUM(saidas.total) as total, SUM(saidas.qtdade) as qtdade, "
                + "produto.id,produto.nome,produto.preco, "
                + "funcionario.nome as nof,saidas.troco,saidas.valorpago FROM saidas  inner join"
                + " produto  on saidas.producto_id = produto.id  "
                + "join funcionario on funcionario.id=saidas.funcionario_id && saidas.data='" + data() + "' "
                + " && saidas.idmovimento = '" + idmovimento + "' GROUP BY(produto.nome)";

                try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                    ResultSet rs = ps.executeQuery()) {
                    JRResultSetDataSource dataSource = new JRResultSetDataSource(rs);
                    JasperPrint jasperPrint = JasperFillManager.fillReport("C:\\FARMACIA\\relatorios\\venda1.jasper", new HashMap(), dataSource);
                    JasperViewer jv = new JasperViewer(jasperPrint, false);
                    jv.setVisible(true);

                } catch (Exception e) {
                    e.printStackTrace();
                }
                AtualizarMovimento();
                SelecionarMovimento();
                LimparCampo();

                //NomedoclienteVenda.setText("");
                ValorTotalVenda.setText(": 0.00");
                

            }
            vendadiaria();
        }
    }//GEN-LAST:event_finalizarcompraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmItenVendaAdm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField Datavendas;
    private javax.swing.JLabel MULTIPICACAO;
    private javax.swing.JTextField ProdutoVenda;
    private javax.swing.JTextField QuantidadeVenda;
    private javax.swing.JTextField ValorPago;
    private javax.swing.JLabel ValorTotalVenda;
    private javax.swing.JTextField ValorporVenda;
    private javax.swing.JButton finalizarcompra;
    private javax.swing.JLabel item;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public static javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JList listar;
    private javax.swing.JTable tbprodutosvendido;
    private javax.swing.JLabel trocos;
    // End of variables declaration//GEN-END:variables

    private void AtualizarSaida() {

        //  sql = "update fornecedor set nome = '" + NomedoclienteVenda.getText().toUpperCase() + "', telefone ='" + ValorporVenda.getText().toUpperCase() + "',"
        //  + "  morada = '" + moradafornecedor.getText().toUpperCase() + "' where id = '" + idfornecedor + "'";
        try {
            conexao.conectar();
            int verificar = conexao.cadastrar_dado(sql);
            if (verificar != 0) {
                JOptionPane.showMessageDialog(null, "REGISTO ATUALIZADO COM SUCESSO");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void AtualizarMovimento() {

        sql = "update movimentosaida set estado = '1' where id = '" + idmovimento + "'";

        try {
            conexao.conectar();
            conexao.cadastrar_dado(sql);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        sql = "insert into movimentosaida values(null,'0')";

        try {
            conexao.conectar();
            conexao.cadastrar_dado(sql);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void AtualizareNTRADA() {
        int verificar = 0;
        int recebeid = 0, recstock = 0, i = 1;
        int qtd = Integer.parseInt(QuantidadeVenda.getText());
        while (i == 1) {
            sql = "select id,stock from entradas where producto_id ='" + idproduto + "' and"
                    + " stock>0 ORDER BY caducidade asc LIMIT 1";

            try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                    ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    recebeid = rs.getInt(1);
                    recstock = rs.getInt(2);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
            if (recstock > qtd) {
                sql = "update entradas set stock = stock-'" + qtd + "' where id = '" + recebeid + "'";

                try {
                    conexao.conectar();
                    conexao.cadastrar_dado(sql);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                i = 0;
            } else {
                sql = "update entradas set stock =0 where id = '" + recebeid + "'";

                try {
                    conexao.conectar();
                    conexao.cadastrar_dado(sql);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                qtd = qtd - recstock;
            }
        }

    }

    private void LimparCampo() {

        ProdutoVenda.setText("");
        ValorporVenda.setText("");
        QuantidadeVenda.setText("");
        totalcompra = 0;
        ((DefaultTableModel) tbprodutosvendido.getModel()).setNumRows(0);// serve para formatar a tualiza a tabela e vai repor as linhas que tiver dentro da tabela que esta no java
        tbprodutosvendido.updateUI();
        

    }

    private void desablitarcampo() {
        //NomedoclienteVenda.setEnabled(false);
        ValorporVenda.setEnabled(false);
        finalizarcompra.setEnabled(false);
        //cancelarvenda.setEnabled(true);

    }

    private void SelecionarM() {
        sql = "select * from fornecedor where nome like '" + ProdutoVenda.getText().toUpperCase() + "%' ORDER BY"
                + " id desc";
        DefaultTableModel dtm = (DefaultTableModel) tbprodutosvendido.getModel();
        if (dtm.getRowCount() != 0) {

            ((DefaultTableModel) tbprodutosvendido.getModel()).setNumRows(0);// serve para formatar a tualiza a tabela e vai repor as linhas que tiver dentro da tabela que esta no java
            tbprodutosvendido.updateUI();

        }

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                Object[] recebeDado = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)};
                dtm.addRow(recebeDado);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void SelecionarMovimento() {

        sql = "select id from movimentosaida where estado = 0 ";

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                idmovimento = rs.getInt(1);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        //finalizarcompra.setText(""+idmovimento);
    }

  

    
private void SelecionarP() {
        DefaultListModel dlm = new DefaultListModel();
sql = "SELECT SUM(entradas.stock),"
                + "produto.id,produto.nome,produto.preco,produto.tipo_medicamento FROM entradas"
                + "  inner join"
                + " produto  on entradas.producto_id = produto.id  && entradas.stock>0 && "
                + "produto.nome like '" + ProdutoVenda.getText().toUpperCase() + "%' "
                + " GROUP BY produto.id ORDER BY produto.nome ASC";
       

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {

                dlm.addElement(seleproduto(rs.getString(2), rs.getString(3), rs.getString(4)));
                
            }
            listar.setModel(dlm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void SelecionarParaVenda() {
        sql = "SELECT "
                + "saidas.id,produto.nome, SUM(saidas.qtdade), SUM(saidas.total) FROM saidas  inner join"
                + " produto  on saidas.producto_id = produto.id && saidas.funcionario_id='" + id + "' && saidas.data='" + data() + "'  && saidas.idmovimento = '" + idmovimento + "' "
                + "GROUP BY(produto.nome) ORDER BY saidas.id ASC";
        DefaultTableModel dtm = (DefaultTableModel) tbprodutosvendido.getModel();
        if (dtm.getRowCount() != 0) {

            ((DefaultTableModel) tbprodutosvendido.getModel()).setNumRows(0);// serve para formatar a tualiza a tabela e vai repor as linhas que tiver dentro da tabela que esta no java
            tbprodutosvendido.updateUI();

        }
        totalcompra = 0;
        tbprodutosvendido.setAutoResizeMode(tbprodutosvendido.AUTO_RESIZE_OFF);
        tbprodutosvendido.getColumnModel().getColumn(0).setPreferredWidth(34);
        tbprodutosvendido.getColumnModel().getColumn(1).setPreferredWidth(300);
        tbprodutosvendido.getColumnModel().getColumn(3).setPreferredWidth(100);
        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                Object[] recebeDado = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)};
                dtm.addRow(recebeDado);
                totalcompra += rs.getInt(4);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        ValorTotalVenda.setText("" + totalcompra + "0");
    }

    private void addsaida() {
        double total = Double.parseDouble(QuantidadeVenda.getText()) * Double.parseDouble(ValorporVenda.getText());
        sql = "insert into saidas values(null,'" + idproduto + "', "
                + "'" + QuantidadeVenda.getText() + "', '" + total + "', '" + Datavendas.getText() + "', '" + id + "','" + idcliente + "', '" + idmovimento + "','0','0')";

        try {
            conexao.conectar();
            int a = conexao.cadastrar_dado(sql);
            if (a != 0) {
                JOptionPane.showMessageDialog(null, "ADD COM SUCESSO");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void cancelarvendas() {
        /*este codigo foi tirado no botao de cancelar venda
         int confirmar = JOptionPane.showConfirmDialog(null, "DESEJA REALMENTE CANCELAR?", "ATENCAO", JOptionPane.YES_NO_OPTION);
         if (confirmar == JOptionPane.YES_OPTION) {

         LimparCampo();
         cancelarvendas();
         ValorTotalVenda.setText("");
         }
        
         fim do codigo
         */
        sql = "delete from saidas where idmovimento='" + idmovimento + "' ";

        try {
            conexao.conectar();
            int a = conexao.cadastrar_dado(sql);
            if (a != 0) {
                JOptionPane.showMessageDialog(null, "pedido cancelado com sucesso");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void atualizarapagar(String idvenda, String qtd) {

        int recebeid = 0, idpr = 0, idmov = 0;
        String data = null;

        sql = "select producto_id,data,idmovimento from saidas where id ='" + idvenda + "' ORDER BY id desc LIMIT 1";

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            if (rs.next()) {
                idpr = rs.getInt(1);
                idmov = rs.getInt(3);
                data = rs.getString(2);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        sql = "select id from entradas where producto_id ='" + idpr + "' ORDER BY caducidade desc LIMIT 1";

        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            if (rs.next()) {
                recebeid = rs.getInt(1);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        sql = "update entradas set stock = stock+'" + qtd + "' where id = '" + recebeid + "'";

        try {
            conexao.conectar();
            conexao.cadastrar_dado(sql);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        sql = "delete from saidas where producto_id='" + idpr + "' && data='" + data + "' && idmovimento='" + idmov + "' ";

        try {
            conexao.conectar();
            int a = conexao.cadastrar_dado(sql);
            if (a != 0) {
                JOptionPane.showMessageDialog(null, "registo removido com sucesso");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void buscardata() {
        
        Date agora = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyMMdd");
        String recebedata = simpleDateFormat.format(agora);
        Datavendas.setText(recebedata);
vendadiaria();
    }
 private StringBuilder seleproduto(String a, String b, String c) {
        StringBuilder sb = new StringBuilder();
        sb.append("<html> <head></head><body>"
                + "<p style='color:black ;"
                + "background:#00bfff;padding:2px;"
                + "text-align:left;width:200px;display:none'>");
        sb.append(b);

        sb.append("<a style='color:#00bfff;display:none'>_");
        sb.append(a);
        sb.append("^</a></p><p style='color:black ;"
                + "background:#00bccf;padding:2px;"
                + "text-align:left;width:200px;display:none'>");
        sb.append(c);
        sb.append("</p></body></html>");

        return sb;
    }
    private String data() {

        Date agora = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyy-MM-dd");
        String recebedata = simpleDateFormat.format(agora);
        return recebedata;

    }

    
    
    
    
     private void adcionarcomp(String id) {
        DefaultListModel dlm = new DefaultListModel();

       // sql = "SELECT * from produto where id = '" + id + "'";
        sql = "SELECT SUM(entradas.stock),"
                + "produto.id,produto.nome,produto.preco FROM entradas"
                + "  inner join"
                + " produto  on entradas.producto_id = produto.id  && entradas.stock>0 && "
                + "produto.id = '" + id + "' "
                + " GROUP BY produto.id ORDER BY produto.id ASC";
        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            if (rs.next()) {
                qtdporVenda=rs.getString(1);
                idproduto = rs.getString(2);
                ProdutoVenda.setText((String) rs.getString(3));
                ValorporVenda.setText(rs.getString(4));
                
                
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void vendadiaria() {
        Double fechament = 0.0;

        sql = "SELECT total FROM saidas WHERE data='" + data() + "' && funcionario_id='" + id + "' ORDER BY id DESC";

        
        try (PreparedStatement ps = (PreparedStatement) conexao.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                fechament += rs.getInt(1);
            }
            jLabel9.setText("" + fechament + "0");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
